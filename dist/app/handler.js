import path from "path";
import fs from "fs/promises";
class Handler {
  constructor(path2) {
    this.path = path2;
    this.listeners = {};
  }
  async load(client) {
    const filenames = await fs.readdir(this.path);
    const filepathList = [];
    for (const filename of filenames) {
      const filepath = path.join(this.path, filename);
      filepathList.push(filepath);
      await this.emit("load", filepath, client);
    }
    await this.emit("finish", filepathList, client);
  }
  on(event, listener) {
    if (!this.listeners[event])
      this.listeners[event] = new Set();
    this.listeners[event].add(listener);
    return this;
  }
  once(event, listener) {
    Object.defineProperty(listener, "once", {
      value: true
    });
    this.on(event, listener);
    return this;
  }
  async emit(event, ...args) {
    const listeners = this.listeners[event] ?? new Set();
    for (const listener of [...listeners]) {
      await listener(...args);
      if (listener.once)
        listeners.delete(listener);
    }
    return this;
  }
}
export {
  Handler
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2FwcC9oYW5kbGVyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiXHJcbmltcG9ydCBmcyBmcm9tIFwiZnMvcHJvbWlzZXNcIlxyXG5cclxuaW1wb3J0ICogYXMgY29yZSBmcm9tIFwiLi9jb3JlLmpzXCJcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSGFuZGxlckV2ZW50cyB7XHJcbiAgbG9hZDogW3BhdGg6IHN0cmluZywgY2xpZW50OiBjb3JlLkZ1bGxDbGllbnRdXHJcbiAgZmluaXNoOiBbaXRlbXM6IHN0cmluZ1tdLCBjbGllbnQ6IGNvcmUuRnVsbENsaWVudF1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEhhbmRsZXIge1xyXG4gIHByaXZhdGUgbGlzdGVuZXJzOiB7IFtrOiBzdHJpbmddOiBTZXQ8YW55PiB9ID0ge31cclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYXRoOiBzdHJpbmcpIHt9XHJcblxyXG4gIGFzeW5jIGxvYWQoY2xpZW50OiBjb3JlLkZ1bGxDbGllbnQpIHtcclxuICAgIGNvbnN0IGZpbGVuYW1lcyA9IGF3YWl0IGZzLnJlYWRkaXIodGhpcy5wYXRoKVxyXG4gICAgY29uc3QgZmlsZXBhdGhMaXN0OiBzdHJpbmdbXSA9IFtdXHJcbiAgICBmb3IgKGNvbnN0IGZpbGVuYW1lIG9mIGZpbGVuYW1lcykge1xyXG4gICAgICBjb25zdCBmaWxlcGF0aCA9IHBhdGguam9pbih0aGlzLnBhdGgsIGZpbGVuYW1lKVxyXG4gICAgICBmaWxlcGF0aExpc3QucHVzaChmaWxlcGF0aClcclxuICAgICAgYXdhaXQgdGhpcy5lbWl0KFwibG9hZFwiLCBmaWxlcGF0aCwgY2xpZW50KVxyXG4gICAgfVxyXG4gICAgYXdhaXQgdGhpcy5lbWl0KFwiZmluaXNoXCIsIGZpbGVwYXRoTGlzdCwgY2xpZW50KVxyXG4gIH1cclxuXHJcbiAgb248RXZlbnROYW1lIGV4dGVuZHMga2V5b2YgSGFuZGxlckV2ZW50cz4oXHJcbiAgICBldmVudDogRXZlbnROYW1lLFxyXG4gICAgbGlzdGVuZXI6ICguLi5hcmdzOiBIYW5kbGVyRXZlbnRzW0V2ZW50TmFtZV0pID0+IHVua25vd25cclxuICApOiB0aGlzIHtcclxuICAgIGlmICghdGhpcy5saXN0ZW5lcnNbZXZlbnRdKSB0aGlzLmxpc3RlbmVyc1tldmVudF0gPSBuZXcgU2V0KClcclxuICAgIHRoaXMubGlzdGVuZXJzW2V2ZW50XS5hZGQobGlzdGVuZXIpXHJcbiAgICByZXR1cm4gdGhpc1xyXG4gIH1cclxuXHJcbiAgb25jZTxFdmVudE5hbWUgZXh0ZW5kcyBrZXlvZiBIYW5kbGVyRXZlbnRzPihcclxuICAgIGV2ZW50OiBFdmVudE5hbWUsXHJcbiAgICBsaXN0ZW5lcjogKC4uLmFyZ3M6IEhhbmRsZXJFdmVudHNbRXZlbnROYW1lXSkgPT4gdW5rbm93blxyXG4gICk6IHRoaXMge1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGxpc3RlbmVyLCBcIm9uY2VcIiwge1xyXG4gICAgICB2YWx1ZTogdHJ1ZSxcclxuICAgIH0pXHJcbiAgICB0aGlzLm9uKGV2ZW50LCBsaXN0ZW5lcilcclxuICAgIHJldHVybiB0aGlzXHJcbiAgfVxyXG5cclxuICBhc3luYyBlbWl0PEV2ZW50TmFtZSBleHRlbmRzIGtleW9mIEhhbmRsZXJFdmVudHM+KFxyXG4gICAgZXZlbnQ6IEV2ZW50TmFtZSxcclxuICAgIC4uLmFyZ3M6IEhhbmRsZXJFdmVudHNbRXZlbnROYW1lXVxyXG4gICk6IFByb21pc2U8dGhpcz4ge1xyXG4gICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnNbZXZlbnRdID8/IG5ldyBTZXQoKVxyXG4gICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiBbLi4ubGlzdGVuZXJzXSkge1xyXG4gICAgICBhd2FpdCBsaXN0ZW5lciguLi5hcmdzKVxyXG4gICAgICBpZiAobGlzdGVuZXIub25jZSkgbGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcilcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzXHJcbiAgfVxyXG59XHJcbiJdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQ0E7QUFTTyxjQUFjO0FBQUEsRUFHbkIsWUFBb0IsT0FBYztBQUFkO0FBRloscUJBQXVDO0FBQUE7QUFBQSxRQUl6QyxLQUFLLFFBQXlCO0FBQ2xDLFVBQU0sWUFBWSxNQUFNLEdBQUcsUUFBUSxLQUFLO0FBQ3hDLFVBQU0sZUFBeUI7QUFDL0IsZUFBVyxZQUFZLFdBQVc7QUFDaEMsWUFBTSxXQUFXLEtBQUssS0FBSyxLQUFLLE1BQU07QUFDdEMsbUJBQWEsS0FBSztBQUNsQixZQUFNLEtBQUssS0FBSyxRQUFRLFVBQVU7QUFBQTtBQUVwQyxVQUFNLEtBQUssS0FBSyxVQUFVLGNBQWM7QUFBQTtBQUFBLEVBRzFDLEdBQ0UsT0FDQSxVQUNNO0FBQ04sUUFBSSxDQUFDLEtBQUssVUFBVTtBQUFRLFdBQUssVUFBVSxTQUFTLElBQUk7QUFDeEQsU0FBSyxVQUFVLE9BQU8sSUFBSTtBQUMxQixXQUFPO0FBQUE7QUFBQSxFQUdULEtBQ0UsT0FDQSxVQUNNO0FBQ04sV0FBTyxlQUFlLFVBQVUsUUFBUTtBQUFBLE1BQ3RDLE9BQU87QUFBQTtBQUVULFNBQUssR0FBRyxPQUFPO0FBQ2YsV0FBTztBQUFBO0FBQUEsUUFHSCxLQUNKLFVBQ0csTUFDWTtBQUNmLFVBQU0sWUFBWSxLQUFLLFVBQVUsVUFBVSxJQUFJO0FBQy9DLGVBQVcsWUFBWSxDQUFDLEdBQUcsWUFBWTtBQUNyQyxZQUFNLFNBQVMsR0FBRztBQUNsQixVQUFJLFNBQVM7QUFBTSxrQkFBVSxPQUFPO0FBQUE7QUFFdEMsV0FBTztBQUFBO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==
